<Window x:Class="Roro.Workflow.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Roro.Workflow.Wpf"
        xmlns:ro="clr-namespace:Roro.Workflow;assembly=Roro.Workflow"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=ro:Flow}"
        Title="{Binding Path=State}" Height="450" Width="800"
        WindowState="Maximized"
        FontFamily="Consolas" FontSize="14">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="250" />
        </Grid.RowDefinitions>

        <WrapPanel Grid.ColumnSpan="2">
            <WrapPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="80" />
                </Style>
                <Style TargetType="Separator">
                    <Setter Property="Width" Value="12" />
                    <Setter Property="Visibility" Value="Hidden" />
                </Style>
                <Style x:Key="DisabledWhenRunningButtonStyle" TargetType="Button" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=State}" Value="Running">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State}" Value="Pausing">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=State}" Value="Stopping">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style x:Key="EnabledWhenIdleButtonStyle" TargetType="Button" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=State}" Value="Running">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </WrapPanel.Resources>
            <Button Content="Open" Style="{StaticResource ResourceKey=DisabledWhenRunningButtonStyle}" />
            <Button Content="Save" Style="{StaticResource ResourceKey=DisabledWhenRunningButtonStyle}" Click="SaveButton_Click" />
            <Separator />
            <Button Content="Add Page" Style="{StaticResource ResourceKey=DisabledWhenRunningButtonStyle}" Click="AddPageButton_Click" />
            <Separator />
            <Button Content="Run" Style="{StaticResource ResourceKey=DisabledWhenRunningButtonStyle}" Click="RunButton_Click" />
            <Button Content="Pause" Style="{StaticResource ResourceKey=EnabledWhenIdleButtonStyle}" Click="PauseButton_Click" />
            <Button Content="Stop" Style="{StaticResource ResourceKey=EnabledWhenIdleButtonStyle}" Click="StopButton_Click" />
        </WrapPanel>

        <local:NodePickerControl Margin="4" Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" />

        <local:FlowControl Margin="4" Grid.Row="1" Grid.Column="1"  />

        <TabControl Margin="4" Grid.Row="2" Grid.Column="1">
            <TabItem Header="Output">
                <DataGrid ItemsSource="{Binding Path=LogEvents}"
                          AutoGenerateColumns="False"
                          IsReadOnly="True"
                          DataContextChanged="DataGrid_DataContextChanged"
                          >
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Page"
                                    Binding="{Binding Path=Page}" />
                        <DataGridTextColumn Header="Node"
                                    Binding="{Binding Path=Node}" />
                        <DataGridTextColumn Header="Activity"
                                    Binding="{Binding Path=Activity}" />
                        <DataGridTextColumn Header="Start Time"
                                    Binding="{Binding Path=StartTime, StringFormat='yyyy-MM-dd HH:mm:ss'}" />
                        <DataGridTextColumn Header="End Time"
                                    Binding="{Binding Path=EndTime, StringFormat='yyyy-MM-dd HH:mm:ss'}" />
                        <DataGridTextColumn Header="Handling Time"
                                    Binding="{Binding Path=HandlingTime, StringFormat='h\\:mm\\:ss\\.fff'}" />
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Expression">
                <local:ExpressionReplControl DataContext="{Binding Path=SelectedPage}" />
            </TabItem>
        </TabControl>
    </Grid>
</Window>
