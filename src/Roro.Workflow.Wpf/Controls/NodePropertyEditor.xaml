<Window x:Class="Roro.Workflow.Wpf.NodePropertyEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Roro.Workflow.Wpf"
        xmlns:ro="clr-namespace:Roro.Workflow;assembly=Roro.Workflow"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=ro:Node}"
        Title="Edit Properties" Height="450" Width="700"
        FontFamily="Consolas" FontSize="14"
        ResizeMode="NoResize"
        Loaded="Window_Loaded"
        WindowStartupLocation="CenterScreen"
        >
    <Grid>
        <Grid.Resources>
            <local:TypeOfConverter x:Key="TypeOfConverter" />
            <local:PropertyWrapper x:Key="PropertyWrapper" />

            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.MenuHighlightColorKey}}" />

            <Style TargetType="DataGrid">
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="ItemsSource" Value="{Binding Path=Arguments}" />
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="CanUserAddRows" Value="False" />
                <Setter Property="CanUserDeleteRows" Value="False" />
                <Setter Property="CanUserReorderColumns" Value="False" />
                <Setter Property="CanUserResizeColumns" Value="True" />
                <Setter Property="CanUserResizeRows" Value="False" />
                <Setter Property="CanUserSortColumns" Value="False" />
                <Setter Property="HorizontalGridLinesBrush" Value="LightGray" />
                <Setter Property="VerticalGridLinesBrush" Value="LightGray" />
                <Setter Property="SelectionMode" Value="Extended" />
                <Setter Property="SelectionUnit" Value="FullRow" />
            </Style>
            <DataGrid x:Key="NodeGrid">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Direction" Binding="{Binding Path=Direction}" IsReadOnly="True" />
                    <DataGridTextColumn Header="ArgumentType" Binding="{Binding Path=ArgumentType.WrappedType.Name}" IsReadOnly="True" />
                    <DataGridTextColumn Header="Expression" Binding="{Binding Path=Expression}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid x:Key="StartNodeGrid">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" />
                    <DataGridTextColumn Header="Direction" Binding="{Binding Path=Direction}" IsReadOnly="True" />
                    <DataGridComboBoxColumn Header="ArgumentType" SelectedItemBinding="{Binding Path=ArgumentType}"
                                                ItemsSource="{x:Static ro:Argument.Types}"
                                                ClipboardContentBinding="{Binding Path=ArgumentType.WrappedType.Name}" />
                    <DataGridTextColumn Header="VariableName" Binding="{Binding Path=Expression}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid x:Key="EndNodeGrid">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" />
                    <DataGridTextColumn Header="Direction" Binding="{Binding Path=Direction}" IsReadOnly="True" />
                    <DataGridComboBoxColumn Header="ArgumentType" SelectedItemBinding="{Binding Path=ArgumentType}"
                                                ItemsSource="{x:Static ro:Argument.Types}"
                                                ClipboardContentBinding="{Binding Path=ArgumentType.WrappedType.Name}" />
                    <DataGridTextColumn Header="Expression" Binding="{Binding Path=Expression}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid x:Key="PreparationNodeGrid">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="VariableName" Binding="{Binding Path=Name}" />
                    <DataGridTextColumn Header="Expression" Binding="{Binding Path=Expression}" Width="*" />
                </DataGrid.Columns>
            </DataGrid>

            <DataTemplate x:Key="StringEditor">
                <TextBox Text="{Binding Path=Value}" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" MaxLines="5" VerticalScrollBarVisibility="Auto">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Value="False" Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=ContentControl}}">
                                    <Setter Property="IsReadOnly" Value="True" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </DataTemplate>

            <DataTemplate x:Key="DecimalEditor">
                <TextBox Text="{Binding Path=Value}" IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
            </DataTemplate>

            <DataTemplate x:Key="BooleanEditor">
                <CheckBox IsChecked="{Binding Path=Value}" Content="{Binding Path=Value}" IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=ContentControl}}"  />
            </DataTemplate>

            <DataTemplate x:Key="DateTimeEditor">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox Grid.Column="0" Text="{Binding Path=Value, StringFormat='yyyy-MM-dd HH:mm:ss'}" IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                    <DatePicker Grid.Column="1" SelectedDate="{Binding Path=Value}">
                        <DatePicker.Resources>
                            <Style TargetType="DatePickerTextBox">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="IsEnabled" Value="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=ContentControl}}" />
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                </Grid>
            </DataTemplate>

        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="12 12 12 0">
            <TextBlock Text="Name" />
            <TextBox x:Name="_nameTextBox" Text="{Binding Path=Name}" Margin="0 3 0 0" Padding="3" />

            <TextBlock Margin="0 12 0 0">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="Text" />
                        <Style.Triggers>
                            <DataTrigger Value="False" Binding="{Binding Path=(cm:DesignerProperties.IsInDesignMode), RelativeSource={RelativeSource Mode=Self}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:ActionNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Text" Value="Action" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:DecisionNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Text" Value="Decision" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:PageNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Text" Value="Page" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:VariableNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Text" Value="Type" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:LoopStartNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Text" Value="Collection" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <ComboBox Margin="0 3 0 0" Padding="3" SelectionChanged="TypeComboBox_SelectionChanged">
                <ComboBox.Resources>
                    <Style TargetType="ComboBox">
                        <Style.Triggers>
                            <DataTrigger Value="False" Binding="{Binding Path=(cm:DesignerProperties.IsInDesignMode), RelativeSource={RelativeSource Mode=Self}}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:ActionNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="ItemsSource" Value="{x:Static ro:ActivityHelper.ActionTypes}" />
                                <Setter Property="SelectedItem" Value="{Binding Path=ActionType}" />
                                <Setter Property="DisplayMemberPath" Value="FullName" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:DecisionNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="ItemsSource" Value="{x:Static ro:ActivityHelper.DecisionTypes}" />
                                <Setter Property="SelectedItem" Value="{Binding Path=DecisionType}" />
                                <Setter Property="DisplayMemberPath" Value="FullName" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:LoopStartNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="ItemsSource" Value="{x:Static ro:ActivityHelper.LoopTypes}" />
                                <Setter Property="SelectedItem" Value="{Binding Path=LoopType}" />
                                <Setter Property="DisplayMemberPath" Value="FullName" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:PageNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="ItemsSource" Value="{Binding Path=ParentPage.ParentFlow.Pages}" />
                                <Setter Property="SelectedValue" Value="{Binding Path=PageId}" />
                                <Setter Property="SelectedValuePath" Value="Id" />
                                <Setter Property="DisplayMemberPath" Value="Name" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:VariableNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="ItemsSource" Value="{x:Static ro:Argument.Types}" />
                                <Setter Property="SelectedItem" Value="{Binding Path=VariableType}" />
                                <Setter Property="DisplayMemberPath" Value="Name" />
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Resources>
            </ComboBox>
        </StackPanel>

        <Grid Grid.Row="1" Margin="12 12 12 0">
            <Grid.Resources>
                <DataTemplate DataType="{x:Type ro:TypeWrapper}">
                    <TextBlock Text="{Binding Path=WrappedType.Name}" />
                </DataTemplate>
            </Grid.Resources>
            <ContentControl x:Name="_dataGridPresenter">
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Setter Property="Content" Value="{StaticResource ResourceKey=NodeGrid}" />
                        <Style.Triggers>
                            <DataTrigger Value="{x:Type ro:StartNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Content" Value="{StaticResource ResourceKey=StartNodeGrid}" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:EndNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Content" Value="{StaticResource ResourceKey=EndNodeGrid}" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:PreparationNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Content" Value="{StaticResource ResourceKey=PreparationNodeGrid}" />
                            </DataTrigger>
                            <DataTrigger Value="{x:Type ro:VariableNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <ContentControl>
                                            <StackPanel>
                                                <TextBlock Text="Initial Value" Margin="0 12 0 0" />
                                                <ContentControl Margin="0 3 0 0" Padding="3" Content="{Binding Converter={StaticResource ResourceKey=PropertyWrapper}, ConverterParameter=InitialValue}">
                                                    <ContentControl.Style>
                                                        <Style TargetType="ContentControl">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="{x:Type sys:String}" Binding="{Binding Path=VariableType.WrappedType, Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ResourceKey=StringEditor}" />
                                                                </DataTrigger>
                                                                <DataTrigger Value="{x:Type sys:Decimal}" Binding="{Binding Path=VariableType.WrappedType, Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ResourceKey=DecimalEditor}" />
                                                                </DataTrigger>
                                                                <DataTrigger Value="{x:Type sys:Boolean}" Binding="{Binding Path=VariableType.WrappedType, Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ResourceKey=BooleanEditor}" />
                                                                </DataTrigger>
                                                                <DataTrigger Value="{x:Type sys:DateTime}" Binding="{Binding Path=VariableType.WrappedType, Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ResourceKey=DateTimeEditor}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentControl.Style>
                                                </ContentControl>

                                                <TextBlock Text="Runtime Value" Margin="0 12 0 0" />
                                                <ContentControl Margin="0 3 0 0" Padding="3" Content="{Binding Converter={StaticResource ResourceKey=PropertyWrapper}, ConverterParameter=RuntimeValue}">
                                                    <ContentControl.Style>
                                                        <Style TargetType="ContentControl">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="{x:Type sys:String}" Binding="{Binding Path=VariableType.WrappedType, Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ResourceKey=StringEditor}" />
                                                                </DataTrigger>
                                                                <DataTrigger Value="{x:Type sys:Decimal}" Binding="{Binding Path=VariableType.WrappedType, Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ResourceKey=DecimalEditor}" />
                                                                </DataTrigger>
                                                                <DataTrigger Value="{x:Type sys:Boolean}" Binding="{Binding Path=VariableType.WrappedType, Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ResourceKey=BooleanEditor}" />
                                                                </DataTrigger>
                                                                <DataTrigger Value="{x:Type sys:DateTime}" Binding="{Binding Path=VariableType.WrappedType, Converter={StaticResource ResourceKey=TypeOfConverter}}">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource ResourceKey=DateTimeEditor}" />
                                                                </DataTrigger>
                                                                 <!--FlowState-->
                                                                <DataTrigger Value="Idle" Binding="{Binding Path=ParentPage.ParentFlow.State}">
                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                </DataTrigger>
                                                                <DataTrigger Value="Completed" Binding="{Binding Path=ParentPage.ParentFlow.State}">
                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentControl.Style>
                                                </ContentControl>
                                            </StackPanel>
                                        </ContentControl>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>
       
        <StackPanel Grid.Row="2" Margin="12 12 12 0" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <DataTrigger Value="False" Binding="{Binding Path=(cm:DesignerProperties.IsInDesignMode), RelativeSource={RelativeSource Mode=Self}}">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Value="{x:Type ro:StartNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="{x:Type ro:EndNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="{x:Type ro:PreparationNode}" Binding="{Binding Converter={StaticResource ResourceKey=TypeOfConverter}}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="90" />
                    <Setter Property="Padding" Value="6 3" />
                    <Setter Property="Margin" Value="0 0 6 0" />
                </Style>
            </StackPanel.Resources>
            <Button Content="Add" Click="AddButton_Click" />
            <Button Content="Remove" Click="RemoveButton_Click" />
            <Button Content="Move Up" Click="MoveUpButton_Click" />
            <Button Content="Move Down" Click="MoveDownButton_Click" />
        </StackPanel>

        <Separator Grid.Row="3" Margin="12 12 12 0" />

        <StackPanel Grid.Row="4" Margin="12" Orientation="Horizontal" HorizontalAlignment="Right">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="90" />
                    <Setter Property="Padding" Value="6 3" />
                    <Setter Property="Margin" Value="6 0 0 0" />
                </Style>
            </StackPanel.Resources>
            <Button Content="OK" Click="OKButton_Click" IsDefault="True" />
            <Button Content="Cancel" Click="CancelButton_Click" IsCancel="True" />
        </StackPanel>
    </Grid>
</Window>
